//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Locust.SMS.Farapayamak.com.payamak_panel.api {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SendSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseBL))]
    public partial class Send : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendSimpleSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSimpleSMS2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendWithDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSmsPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeliveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDelivery2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMultiDeliveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMultiDelivery2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeliveriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeliveries2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeliveries3OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInboxCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMessagesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Send() {
            this.Url = global::Locust.SMS.Farapayamak.Properties.Settings.Default.Locust_SMS_Farapayamak_com_payamak_panel_api_Send;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendSimpleSMSCompletedEventHandler SendSimpleSMSCompleted;
        
        /// <remarks/>
        public event SendSimpleSMS2CompletedEventHandler SendSimpleSMS2Completed;
        
        /// <remarks/>
        public event SendSmsCompletedEventHandler SendSmsCompleted;
        
        /// <remarks/>
        public event SendWithDomainCompletedEventHandler SendWithDomainCompleted;
        
        /// <remarks/>
        public event GetSmsPriceCompletedEventHandler GetSmsPriceCompleted;
        
        /// <remarks/>
        public event GetCreditCompletedEventHandler GetCreditCompleted;
        
        /// <remarks/>
        public event GetDeliveryCompletedEventHandler GetDeliveryCompleted;
        
        /// <remarks/>
        public event GetDelivery2CompletedEventHandler GetDelivery2Completed;
        
        /// <remarks/>
        public event GetMultiDeliveryCompletedEventHandler GetMultiDeliveryCompleted;
        
        /// <remarks/>
        public event GetMultiDelivery2CompletedEventHandler GetMultiDelivery2Completed;
        
        /// <remarks/>
        public event GetDeliveriesCompletedEventHandler GetDeliveriesCompleted;
        
        /// <remarks/>
        public event GetDeliveries2CompletedEventHandler GetDeliveries2Completed;
        
        /// <remarks/>
        public event GetDeliveries3CompletedEventHandler GetDeliveries3Completed;
        
        /// <remarks/>
        public event GetInboxCountCompletedEventHandler GetInboxCountCompleted;
        
        /// <remarks/>
        public event getMessagesCompletedEventHandler getMessagesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSimpleSMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] SendSimpleSMS(string username, string password, string[] to, string from, string text, bool isflash) {
            object[] results = this.Invoke("SendSimpleSMS", new object[] {
                        username,
                        password,
                        to,
                        from,
                        text,
                        isflash});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void SendSimpleSMSAsync(string username, string password, string[] to, string from, string text, bool isflash) {
            this.SendSimpleSMSAsync(username, password, to, from, text, isflash, null);
        }
        
        /// <remarks/>
        public void SendSimpleSMSAsync(string username, string password, string[] to, string from, string text, bool isflash, object userState) {
            if ((this.SendSimpleSMSOperationCompleted == null)) {
                this.SendSimpleSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSimpleSMSOperationCompleted);
            }
            this.InvokeAsync("SendSimpleSMS", new object[] {
                        username,
                        password,
                        to,
                        from,
                        text,
                        isflash}, this.SendSimpleSMSOperationCompleted, userState);
        }
        
        private void OnSendSimpleSMSOperationCompleted(object arg) {
            if ((this.SendSimpleSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSimpleSMSCompleted(this, new SendSimpleSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSimpleSMS2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendSimpleSMS2(string username, string password, string to, string from, string text, bool isflash) {
            object[] results = this.Invoke("SendSimpleSMS2", new object[] {
                        username,
                        password,
                        to,
                        from,
                        text,
                        isflash});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSimpleSMS2Async(string username, string password, string to, string from, string text, bool isflash) {
            this.SendSimpleSMS2Async(username, password, to, from, text, isflash, null);
        }
        
        /// <remarks/>
        public void SendSimpleSMS2Async(string username, string password, string to, string from, string text, bool isflash, object userState) {
            if ((this.SendSimpleSMS2OperationCompleted == null)) {
                this.SendSimpleSMS2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSimpleSMS2OperationCompleted);
            }
            this.InvokeAsync("SendSimpleSMS2", new object[] {
                        username,
                        password,
                        to,
                        from,
                        text,
                        isflash}, this.SendSimpleSMS2OperationCompleted, userState);
        }
        
        private void OnSendSimpleSMS2OperationCompleted(object arg) {
            if ((this.SendSimpleSMS2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSimpleSMS2Completed(this, new SendSimpleSMS2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendSms(string username, string password, string[] to, string from, string text, bool isflash, string udh, ref long[] recId, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] ref byte[] status) {
            object[] results = this.Invoke("SendSms", new object[] {
                        username,
                        password,
                        to,
                        from,
                        text,
                        isflash,
                        udh,
                        recId,
                        status});
            recId = ((long[])(results[1]));
            status = ((byte[])(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendSmsAsync(string username, string password, string[] to, string from, string text, bool isflash, string udh, long[] recId, byte[] status) {
            this.SendSmsAsync(username, password, to, from, text, isflash, udh, recId, status, null);
        }
        
        /// <remarks/>
        public void SendSmsAsync(string username, string password, string[] to, string from, string text, bool isflash, string udh, long[] recId, byte[] status, object userState) {
            if ((this.SendSmsOperationCompleted == null)) {
                this.SendSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSmsOperationCompleted);
            }
            this.InvokeAsync("SendSms", new object[] {
                        username,
                        password,
                        to,
                        from,
                        text,
                        isflash,
                        udh,
                        recId,
                        status}, this.SendSmsOperationCompleted, userState);
        }
        
        private void OnSendSmsOperationCompleted(object arg) {
            if ((this.SendSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSmsCompleted(this, new SendSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendWithDomain", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendWithDomain(string username, string password, string to, string from, string text, bool isflash, string domainName) {
            object[] results = this.Invoke("SendWithDomain", new object[] {
                        username,
                        password,
                        to,
                        from,
                        text,
                        isflash,
                        domainName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendWithDomainAsync(string username, string password, string to, string from, string text, bool isflash, string domainName) {
            this.SendWithDomainAsync(username, password, to, from, text, isflash, domainName, null);
        }
        
        /// <remarks/>
        public void SendWithDomainAsync(string username, string password, string to, string from, string text, bool isflash, string domainName, object userState) {
            if ((this.SendWithDomainOperationCompleted == null)) {
                this.SendWithDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendWithDomainOperationCompleted);
            }
            this.InvokeAsync("SendWithDomain", new object[] {
                        username,
                        password,
                        to,
                        from,
                        text,
                        isflash,
                        domainName}, this.SendWithDomainOperationCompleted, userState);
        }
        
        private void OnSendWithDomainOperationCompleted(object arg) {
            if ((this.SendWithDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendWithDomainCompleted(this, new SendWithDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSmsPrice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double GetSmsPrice(string username, string password, int irancellCount, int mtnCount, string from, string text) {
            object[] results = this.Invoke("GetSmsPrice", new object[] {
                        username,
                        password,
                        irancellCount,
                        mtnCount,
                        from,
                        text});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void GetSmsPriceAsync(string username, string password, int irancellCount, int mtnCount, string from, string text) {
            this.GetSmsPriceAsync(username, password, irancellCount, mtnCount, from, text, null);
        }
        
        /// <remarks/>
        public void GetSmsPriceAsync(string username, string password, int irancellCount, int mtnCount, string from, string text, object userState) {
            if ((this.GetSmsPriceOperationCompleted == null)) {
                this.GetSmsPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSmsPriceOperationCompleted);
            }
            this.InvokeAsync("GetSmsPrice", new object[] {
                        username,
                        password,
                        irancellCount,
                        mtnCount,
                        from,
                        text}, this.GetSmsPriceOperationCompleted, userState);
        }
        
        private void OnGetSmsPriceOperationCompleted(object arg) {
            if ((this.GetSmsPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSmsPriceCompleted(this, new GetSmsPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCredit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double GetCredit(string username, string password) {
            object[] results = this.Invoke("GetCredit", new object[] {
                        username,
                        password});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void GetCreditAsync(string username, string password) {
            this.GetCreditAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetCreditAsync(string username, string password, object userState) {
            if ((this.GetCreditOperationCompleted == null)) {
                this.GetCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCreditOperationCompleted);
            }
            this.InvokeAsync("GetCredit", new object[] {
                        username,
                        password}, this.GetCreditOperationCompleted, userState);
        }
        
        private void OnGetCreditOperationCompleted(object arg) {
            if ((this.GetCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCreditCompleted(this, new GetCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDelivery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDelivery(long recId) {
            object[] results = this.Invoke("GetDelivery", new object[] {
                        recId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeliveryAsync(long recId) {
            this.GetDeliveryAsync(recId, null);
        }
        
        /// <remarks/>
        public void GetDeliveryAsync(long recId, object userState) {
            if ((this.GetDeliveryOperationCompleted == null)) {
                this.GetDeliveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeliveryOperationCompleted);
            }
            this.InvokeAsync("GetDelivery", new object[] {
                        recId}, this.GetDeliveryOperationCompleted, userState);
        }
        
        private void OnGetDeliveryOperationCompleted(object arg) {
            if ((this.GetDeliveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeliveryCompleted(this, new GetDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDelivery2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDelivery2(string recId) {
            object[] results = this.Invoke("GetDelivery2", new object[] {
                        recId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDelivery2Async(string recId) {
            this.GetDelivery2Async(recId, null);
        }
        
        /// <remarks/>
        public void GetDelivery2Async(string recId, object userState) {
            if ((this.GetDelivery2OperationCompleted == null)) {
                this.GetDelivery2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDelivery2OperationCompleted);
            }
            this.InvokeAsync("GetDelivery2", new object[] {
                        recId}, this.GetDelivery2OperationCompleted, userState);
        }
        
        private void OnGetDelivery2OperationCompleted(object arg) {
            if ((this.GetDelivery2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDelivery2Completed(this, new GetDelivery2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMultiDelivery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetMultiDelivery(string recId) {
            object[] results = this.Invoke("GetMultiDelivery", new object[] {
                        recId});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMultiDeliveryAsync(string recId) {
            this.GetMultiDeliveryAsync(recId, null);
        }
        
        /// <remarks/>
        public void GetMultiDeliveryAsync(string recId, object userState) {
            if ((this.GetMultiDeliveryOperationCompleted == null)) {
                this.GetMultiDeliveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMultiDeliveryOperationCompleted);
            }
            this.InvokeAsync("GetMultiDelivery", new object[] {
                        recId}, this.GetMultiDeliveryOperationCompleted, userState);
        }
        
        private void OnGetMultiDeliveryOperationCompleted(object arg) {
            if ((this.GetMultiDeliveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMultiDeliveryCompleted(this, new GetMultiDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMultiDelivery2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetMultiDelivery2(string recId) {
            object[] results = this.Invoke("GetMultiDelivery2", new object[] {
                        recId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMultiDelivery2Async(string recId) {
            this.GetMultiDelivery2Async(recId, null);
        }
        
        /// <remarks/>
        public void GetMultiDelivery2Async(string recId, object userState) {
            if ((this.GetMultiDelivery2OperationCompleted == null)) {
                this.GetMultiDelivery2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMultiDelivery2OperationCompleted);
            }
            this.InvokeAsync("GetMultiDelivery2", new object[] {
                        recId}, this.GetMultiDelivery2OperationCompleted, userState);
        }
        
        private void OnGetMultiDelivery2OperationCompleted(object arg) {
            if ((this.GetMultiDelivery2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMultiDelivery2Completed(this, new GetMultiDelivery2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeliveries", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetDeliveries(long[] recIds, string username, string password) {
            object[] results = this.Invoke("GetDeliveries", new object[] {
                        recIds,
                        username,
                        password});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDeliveriesAsync(long[] recIds, string username, string password) {
            this.GetDeliveriesAsync(recIds, username, password, null);
        }
        
        /// <remarks/>
        public void GetDeliveriesAsync(long[] recIds, string username, string password, object userState) {
            if ((this.GetDeliveriesOperationCompleted == null)) {
                this.GetDeliveriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeliveriesOperationCompleted);
            }
            this.InvokeAsync("GetDeliveries", new object[] {
                        recIds,
                        username,
                        password}, this.GetDeliveriesOperationCompleted, userState);
        }
        
        private void OnGetDeliveriesOperationCompleted(object arg) {
            if ((this.GetDeliveriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeliveriesCompleted(this, new GetDeliveriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeliveries2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDeliveries2(string recId) {
            object[] results = this.Invoke("GetDeliveries2", new object[] {
                        recId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeliveries2Async(string recId) {
            this.GetDeliveries2Async(recId, null);
        }
        
        /// <remarks/>
        public void GetDeliveries2Async(string recId, object userState) {
            if ((this.GetDeliveries2OperationCompleted == null)) {
                this.GetDeliveries2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeliveries2OperationCompleted);
            }
            this.InvokeAsync("GetDeliveries2", new object[] {
                        recId}, this.GetDeliveries2OperationCompleted, userState);
        }
        
        private void OnGetDeliveries2OperationCompleted(object arg) {
            if ((this.GetDeliveries2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeliveries2Completed(this, new GetDeliveries2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeliveries3", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetDeliveries3(string[] recId, string username, string password) {
            object[] results = this.Invoke("GetDeliveries3", new object[] {
                        recId,
                        username,
                        password});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDeliveries3Async(string[] recId, string username, string password) {
            this.GetDeliveries3Async(recId, username, password, null);
        }
        
        /// <remarks/>
        public void GetDeliveries3Async(string[] recId, string username, string password, object userState) {
            if ((this.GetDeliveries3OperationCompleted == null)) {
                this.GetDeliveries3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeliveries3OperationCompleted);
            }
            this.InvokeAsync("GetDeliveries3", new object[] {
                        recId,
                        username,
                        password}, this.GetDeliveries3OperationCompleted, userState);
        }
        
        private void OnGetDeliveries3OperationCompleted(object arg) {
            if ((this.GetDeliveries3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeliveries3Completed(this, new GetDeliveries3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInboxCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetInboxCount(string username, string password, bool isRead) {
            object[] results = this.Invoke("GetInboxCount", new object[] {
                        username,
                        password,
                        isRead});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetInboxCountAsync(string username, string password, bool isRead) {
            this.GetInboxCountAsync(username, password, isRead, null);
        }
        
        /// <remarks/>
        public void GetInboxCountAsync(string username, string password, bool isRead, object userState) {
            if ((this.GetInboxCountOperationCompleted == null)) {
                this.GetInboxCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInboxCountOperationCompleted);
            }
            this.InvokeAsync("GetInboxCount", new object[] {
                        username,
                        password,
                        isRead}, this.GetInboxCountOperationCompleted, userState);
        }
        
        private void OnGetInboxCountOperationCompleted(object arg) {
            if ((this.GetInboxCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInboxCountCompleted(this, new GetInboxCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMessages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessagesBL[] getMessages(string username, string password, int location, string from, int index, int count) {
            object[] results = this.Invoke("getMessages", new object[] {
                        username,
                        password,
                        location,
                        from,
                        index,
                        count});
            return ((MessagesBL[])(results[0]));
        }
        
        /// <remarks/>
        public void getMessagesAsync(string username, string password, int location, string from, int index, int count) {
            this.getMessagesAsync(username, password, location, from, index, count, null);
        }
        
        /// <remarks/>
        public void getMessagesAsync(string username, string password, int location, string from, int index, int count, object userState) {
            if ((this.getMessagesOperationCompleted == null)) {
                this.getMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMessagesOperationCompleted);
            }
            this.InvokeAsync("getMessages", new object[] {
                        username,
                        password,
                        location,
                        from,
                        index,
                        count}, this.getMessagesOperationCompleted, userState);
        }
        
        private void OngetMessagesOperationCompleted(object arg) {
            if ((this.getMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMessagesCompleted(this, new getMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MessagesBL : BaseBL {
        
        private long msgIDField;
        
        private int userIDField;
        
        private int linkIDField;
        
        private int numberIDField;
        
        private double tariffField;
        
        private byte msgTypeField;
        
        private string bodyField;
        
        private string udhField;
        
        private System.DateTime sendDateField;
        
        private string senderField;
        
        private string receiverField;
        
        private int firstLocationField;
        
        private int currentLocationField;
        
        private int partsField;
        
        private bool isFlashField;
        
        private bool isReadField;
        
        private bool isUnicodeField;
        
        private double creditField;
        
        private int moduleField;
        
        private int recCountField;
        
        private int recFailedField;
        
        private int recSuccessField;
        
        private bool isMoneyBackField;
        
        private int userStepedMasterField;
        
        private int userMasterField;
        
        private int moneyBackCountField;
        
        private int moneyBackLevelField;
        
        /// <remarks/>
        public long MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public int LinkID {
            get {
                return this.linkIDField;
            }
            set {
                this.linkIDField = value;
            }
        }
        
        /// <remarks/>
        public int NumberID {
            get {
                return this.numberIDField;
            }
            set {
                this.numberIDField = value;
            }
        }
        
        /// <remarks/>
        public double Tariff {
            get {
                return this.tariffField;
            }
            set {
                this.tariffField = value;
            }
        }
        
        /// <remarks/>
        public byte MsgType {
            get {
                return this.msgTypeField;
            }
            set {
                this.msgTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
            }
        }
        
        /// <remarks/>
        public string Udh {
            get {
                return this.udhField;
            }
            set {
                this.udhField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SendDate {
            get {
                return this.sendDateField;
            }
            set {
                this.sendDateField = value;
            }
        }
        
        /// <remarks/>
        public string Sender {
            get {
                return this.senderField;
            }
            set {
                this.senderField = value;
            }
        }
        
        /// <remarks/>
        public string Receiver {
            get {
                return this.receiverField;
            }
            set {
                this.receiverField = value;
            }
        }
        
        /// <remarks/>
        public int FirstLocation {
            get {
                return this.firstLocationField;
            }
            set {
                this.firstLocationField = value;
            }
        }
        
        /// <remarks/>
        public int CurrentLocation {
            get {
                return this.currentLocationField;
            }
            set {
                this.currentLocationField = value;
            }
        }
        
        /// <remarks/>
        public int Parts {
            get {
                return this.partsField;
            }
            set {
                this.partsField = value;
            }
        }
        
        /// <remarks/>
        public bool IsFlash {
            get {
                return this.isFlashField;
            }
            set {
                this.isFlashField = value;
            }
        }
        
        /// <remarks/>
        public bool IsRead {
            get {
                return this.isReadField;
            }
            set {
                this.isReadField = value;
            }
        }
        
        /// <remarks/>
        public bool IsUnicode {
            get {
                return this.isUnicodeField;
            }
            set {
                this.isUnicodeField = value;
            }
        }
        
        /// <remarks/>
        public double Credit {
            get {
                return this.creditField;
            }
            set {
                this.creditField = value;
            }
        }
        
        /// <remarks/>
        public int Module {
            get {
                return this.moduleField;
            }
            set {
                this.moduleField = value;
            }
        }
        
        /// <remarks/>
        public int RecCount {
            get {
                return this.recCountField;
            }
            set {
                this.recCountField = value;
            }
        }
        
        /// <remarks/>
        public int RecFailed {
            get {
                return this.recFailedField;
            }
            set {
                this.recFailedField = value;
            }
        }
        
        /// <remarks/>
        public int RecSuccess {
            get {
                return this.recSuccessField;
            }
            set {
                this.recSuccessField = value;
            }
        }
        
        /// <remarks/>
        public bool IsMoneyBack {
            get {
                return this.isMoneyBackField;
            }
            set {
                this.isMoneyBackField = value;
            }
        }
        
        /// <remarks/>
        public int UserStepedMaster {
            get {
                return this.userStepedMasterField;
            }
            set {
                this.userStepedMasterField = value;
            }
        }
        
        /// <remarks/>
        public int UserMaster {
            get {
                return this.userMasterField;
            }
            set {
                this.userMasterField = value;
            }
        }
        
        /// <remarks/>
        public int MoneyBackCount {
            get {
                return this.moneyBackCountField;
            }
            set {
                this.moneyBackCountField = value;
            }
        }
        
        /// <remarks/>
        public int MoneyBackLevel {
            get {
                return this.moneyBackLevelField;
            }
            set {
                this.moneyBackLevelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MessagesBL))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BaseBL {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendSimpleSMSCompletedEventHandler(object sender, SendSimpleSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSimpleSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSimpleSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendSimpleSMS2CompletedEventHandler(object sender, SendSimpleSMS2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSimpleSMS2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSimpleSMS2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendSmsCompletedEventHandler(object sender, SendSmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long[] recId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public byte[] status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendWithDomainCompletedEventHandler(object sender, SendWithDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendWithDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendWithDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetSmsPriceCompletedEventHandler(object sender, GetSmsPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSmsPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSmsPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCreditCompletedEventHandler(object sender, GetCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDeliveryCompletedEventHandler(object sender, GetDeliveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDelivery2CompletedEventHandler(object sender, GetDelivery2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDelivery2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDelivery2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMultiDeliveryCompletedEventHandler(object sender, GetMultiDeliveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMultiDeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMultiDeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMultiDelivery2CompletedEventHandler(object sender, GetMultiDelivery2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMultiDelivery2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMultiDelivery2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDeliveriesCompletedEventHandler(object sender, GetDeliveriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeliveriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeliveriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDeliveries2CompletedEventHandler(object sender, GetDeliveries2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeliveries2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeliveries2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDeliveries3CompletedEventHandler(object sender, GetDeliveries3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeliveries3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeliveries3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetInboxCountCompletedEventHandler(object sender, GetInboxCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInboxCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInboxCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getMessagesCompletedEventHandler(object sender, getMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessagesBL[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessagesBL[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591