@foreach (var _using in Model.Usings)
{
<text>using @(_using);</text>
}

namespace @Model.Namespace
{
	public partial class @(Model.Service + Model.ConcreteService + Model.Action + Model.Suffix)Action : @(Model.Service + Model.Action)BaseAction
    {
		private async Task DoRun(@(Model.Service + Model.Action)Request request, @(Model.Service + Model.Action)Response response, bool async, CancellationToken cancellation)
		{
			await Task.CompletedTask;
		}
		protected override void RunInternal(@(Model.Service + Model.Action)Request request, @(Model.Service + Model.Action)Response response)
		{
			DoRun(request, response, false, CancellationToken.None).Wait();
		}
        protected override async Task RunInternalAsync(@(Model.Service + Model.Action)Request request, @(Model.Service + Model.Action)Response response, CancellationToken cancellation)
        {
@if ((object)Model.DefaultAsync != null && Model.DefaultAsync)
{
		<text>	RunInternal(request, response);</text>
		<text></text>
		<text>	return await Task.CompletedTask;</text>
}
else
{
		<text>	await DoRun(request, response, true, cancellation);</text>
}
		}
	}
}
